name: Build VSIX Package

on:
    push:
        branches: [main, 'feature/**']
        tags: ['v*']
    pull_request:
        branches: [main, 'feature/**']
    workflow_dispatch:

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20'

            - name: Install dependencies
              run: |
                  npm install -g @vscode/vsce

            - name: Validate package.json
              run: |
                  # Check if package.json is valid
                  node -e "JSON.parse(require('fs').readFileSync('package.json', 'utf8'))"
                  echo "✅ package.json is valid JSON"

            - name: Validate theme files
              run: |
                  # Check if all theme files exist and are readable
                  for theme in themes/*.json; do
                    if [ -f "$theme" ]; then
                      echo "Checking $theme exists and is readable..."
                      if [ -r "$theme" ]; then
                        echo "✅ $theme is accessible"
                      else
                        echo "❌ $theme is not readable"
                        exit 1
                      fi
                    else
                      echo "❌ $theme not found"
                      exit 1
                    fi
                  done
                  echo "✅ All theme files are present and accessible"

            - name: Build VSIX package
              run: |
                  # Create VSIX package
                  vsce package

            - name: Get package info
              id: package
              run: |
                  PACKAGE_NAME=$(node -p "require('./package.json').name")
                  PACKAGE_VERSION=$(node -p "require('./package.json').version")
                  echo "name=$PACKAGE_NAME" >> $GITHUB_OUTPUT
                  echo "version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
                  echo "filename=$PACKAGE_NAME-$PACKAGE_VERSION.vsix" >> $GITHUB_OUTPUT

            - name: Upload VSIX artifact
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ steps.package.outputs.name }}-${{ steps.package.outputs.version }}
                  path: ./*.vsix
                  retention-days: 30

            - name: Create Release (on tag)
              if: startsWith(github.ref, 'refs/tags/v')
              id: create_release
              uses: softprops/action-gh-release@v2
              with:
                  tag_name: ${{ github.ref_name }}
                  name: Release ${{ github.ref_name }}
                  body: |
                      ## Ultralove Theme Collection ${{ steps.package.outputs.version }}

                      ### What's Included
                      - Ultralove Black Theme - Ultra-dark theme for low-light coding
                      - Ultralove White Theme - Clean light theme for bright environments
                      - Ultralove Blue Theme - Calming blue-tinted theme

                      ### Installation
                      Download the `.vsix` file and install it using:
                      ```bash
                      code --install-extension ${{ steps.package.outputs.filename }}
                      ```

                      Or install directly from the VS Code Extensions marketplace.
                  files: ./${{ steps.package.outputs.filename }}
                  draft: false
                  prerelease: false
